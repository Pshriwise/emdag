# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
@HDF5_FILE_TRUE@am__append_1 = h5file
@ENABLE_dagmc_TRUE@am__append_2 = dagmc
@PARALLEL_TRUE@am__append_3 = parallel
@OLD_HEADERS_TRUE@am__append_4 = oldinc
@PARALLEL_TRUE@am__append_5 = -I$(top_srcdir)/src/parallel
TESTS = range_test$(EXEEXT) moab_test$(EXEEXT) homxform_test$(EXEEXT) \
	scdseq_test$(EXEEXT) scd_test_partn$(EXEEXT) test_adj$(EXEEXT) \
	seq_man_test$(EXEEXT) geom_util_test$(EXEEXT) \
	xform_test$(EXEEXT) obb_test$(EXEEXT) \
	adaptive_kd_tree_tests$(EXEEXT) bsp_tree_test$(EXEEXT) \
	file_options_test$(EXEEXT) kd_tree_test$(EXEEXT) \
	var_len_test$(EXEEXT) var_len_test_no_template$(EXEEXT) \
	tag_test$(EXEEXT) mesh_set_test$(EXEEXT) mbcn_test$(EXEEXT) \
	bsp_tree_poly_test$(EXEEXT) reorder_test$(EXEEXT) \
	test_prog_opt$(EXEEXT) coords_connect_iterate$(EXEEXT) \
	elem_eval_test$(EXEEXT) spatial_locator_test$(EXEEXT) \
	test_boundbox$(EXEEXT) adj_moab_test$(EXEEXT) \
	uref_mesh_test$(EXEEXT) verdict_test$(EXEEXT) $(am__EXEEXT_1)
@HDF5_FILE_TRUE@am__append_6 = mbfacet_test \
@HDF5_FILE_TRUE@        gttool_test \
@HDF5_FILE_TRUE@        cropvol_test \
@HDF5_FILE_TRUE@        mergemesh_test \
@HDF5_FILE_TRUE@        mbground_test \
@HDF5_FILE_TRUE@        lloyd_smoother_test

check_PROGRAMS = $(am__EXEEXT_2) kd_tree_tool$(EXEEXT) \
	kd_tree_time$(EXEEXT)
@PARALLEL_TRUE@am__append_7 = -I$(top_srcdir)/src/parallel
@PARALLEL_TRUE@am__append_8 = -I$(top_srcdir)/src/parallel
@PARALLEL_TRUE@am__append_9 = -I$(top_srcdir)/src/parallel
subdir = test
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/config/test-driver
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/ccmio.m4 \
	$(top_srcdir)/config/cgns.m4 $(top_srcdir)/config/compiler.m4 \
	$(top_srcdir)/config/cplusplus.m4 \
	$(top_srcdir)/config/damsel.m4 $(top_srcdir)/config/hdf5.m4 \
	$(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/macro_val.m4 \
	$(top_srcdir)/config/makevar.m4 $(top_srcdir)/config/mpe.m4 \
	$(top_srcdir)/config/mpi.m4 $(top_srcdir)/config/netcdf.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/src/moab/Version.h \
	$(top_builddir)/src/moab/EntityHandle.hpp \
	$(top_builddir)/src/parallel/moab_mpi_config.h \
	$(top_builddir)/src/FCDefs.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@HDF5_FILE_TRUE@am__EXEEXT_1 = mbfacet_test$(EXEEXT) \
@HDF5_FILE_TRUE@	gttool_test$(EXEEXT) cropvol_test$(EXEEXT) \
@HDF5_FILE_TRUE@	mergemesh_test$(EXEEXT) mbground_test$(EXEEXT) \
@HDF5_FILE_TRUE@	lloyd_smoother_test$(EXEEXT)
am__EXEEXT_2 = range_test$(EXEEXT) moab_test$(EXEEXT) \
	homxform_test$(EXEEXT) scdseq_test$(EXEEXT) \
	scd_test_partn$(EXEEXT) test_adj$(EXEEXT) \
	seq_man_test$(EXEEXT) geom_util_test$(EXEEXT) \
	xform_test$(EXEEXT) obb_test$(EXEEXT) \
	adaptive_kd_tree_tests$(EXEEXT) bsp_tree_test$(EXEEXT) \
	file_options_test$(EXEEXT) kd_tree_test$(EXEEXT) \
	var_len_test$(EXEEXT) var_len_test_no_template$(EXEEXT) \
	tag_test$(EXEEXT) mesh_set_test$(EXEEXT) mbcn_test$(EXEEXT) \
	bsp_tree_poly_test$(EXEEXT) reorder_test$(EXEEXT) \
	test_prog_opt$(EXEEXT) coords_connect_iterate$(EXEEXT) \
	elem_eval_test$(EXEEXT) spatial_locator_test$(EXEEXT) \
	test_boundbox$(EXEEXT) adj_moab_test$(EXEEXT) \
	uref_mesh_test$(EXEEXT) verdict_test$(EXEEXT) $(am__EXEEXT_1)
am_adaptive_kd_tree_tests_OBJECTS = adaptive_kd_tree_tests.$(OBJEXT)
adaptive_kd_tree_tests_OBJECTS = $(am_adaptive_kd_tree_tests_OBJECTS)
adaptive_kd_tree_tests_LDADD = $(LDADD)
adaptive_kd_tree_tests_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_adj_moab_test_OBJECTS = adj_moab_test.$(OBJEXT)
adj_moab_test_OBJECTS = $(am_adj_moab_test_OBJECTS)
adj_moab_test_LDADD = $(LDADD)
adj_moab_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_bsp_tree_poly_test_OBJECTS = bsp_tree_poly_test.$(OBJEXT)
bsp_tree_poly_test_OBJECTS = $(am_bsp_tree_poly_test_OBJECTS)
bsp_tree_poly_test_LDADD = $(LDADD)
bsp_tree_poly_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_bsp_tree_test_OBJECTS = bsp_tree_test.$(OBJEXT)
bsp_tree_test_OBJECTS = $(am_bsp_tree_test_OBJECTS)
bsp_tree_test_LDADD = $(LDADD)
bsp_tree_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_coords_connect_iterate_OBJECTS =  \
	coords_connect_iterate-coords_connect_iterate.$(OBJEXT)
coords_connect_iterate_OBJECTS = $(am_coords_connect_iterate_OBJECTS)
coords_connect_iterate_LDADD = $(LDADD)
coords_connect_iterate_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_cropvol_test_OBJECTS = crop_vol_test.$(OBJEXT)
cropvol_test_OBJECTS = $(am_cropvol_test_OBJECTS)
cropvol_test_LDADD = $(LDADD)
cropvol_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_elem_eval_test_OBJECTS = elem_eval_test.$(OBJEXT)
elem_eval_test_OBJECTS = $(am_elem_eval_test_OBJECTS)
elem_eval_test_LDADD = $(LDADD)
elem_eval_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_file_options_test_OBJECTS = fileopts_test.$(OBJEXT)
file_options_test_OBJECTS = $(am_file_options_test_OBJECTS)
file_options_test_LDADD = $(LDADD)
file_options_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_geom_util_test_OBJECTS = GeomUtilTests.$(OBJEXT)
geom_util_test_OBJECTS = $(am_geom_util_test_OBJECTS)
geom_util_test_LDADD = $(LDADD)
geom_util_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_gttool_test_OBJECTS = gttool_test.$(OBJEXT)
gttool_test_OBJECTS = $(am_gttool_test_OBJECTS)
gttool_test_LDADD = $(LDADD)
gttool_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_homxform_test_OBJECTS = homxform_test.$(OBJEXT)
homxform_test_OBJECTS = $(am_homxform_test_OBJECTS)
homxform_test_LDADD = $(LDADD)
homxform_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_kd_tree_test_OBJECTS = kd_tree_test-kd_tree_test.$(OBJEXT)
kd_tree_test_OBJECTS = $(am_kd_tree_test_OBJECTS)
kd_tree_test_LDADD = $(LDADD)
kd_tree_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_kd_tree_time_OBJECTS = kd_tree_time.$(OBJEXT)
kd_tree_time_OBJECTS = $(am_kd_tree_time_OBJECTS)
kd_tree_time_LDADD = $(LDADD)
kd_tree_time_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_kd_tree_tool_OBJECTS = kd_tree_tool.$(OBJEXT)
kd_tree_tool_OBJECTS = $(am_kd_tree_tool_OBJECTS)
kd_tree_tool_LDADD = $(LDADD)
kd_tree_tool_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_lloyd_smoother_test_OBJECTS = lloyd_smoother_test.$(OBJEXT)
lloyd_smoother_test_OBJECTS = $(am_lloyd_smoother_test_OBJECTS)
lloyd_smoother_test_LDADD = $(LDADD)
lloyd_smoother_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_mbcn_test_OBJECTS = mbcn_test.$(OBJEXT)
mbcn_test_OBJECTS = $(am_mbcn_test_OBJECTS)
mbcn_test_LDADD = $(LDADD)
mbcn_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_mbfacet_test_OBJECTS = mbfacet_test.$(OBJEXT)
mbfacet_test_OBJECTS = $(am_mbfacet_test_OBJECTS)
mbfacet_test_LDADD = $(LDADD)
mbfacet_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_mbground_test_OBJECTS = mbground_test.$(OBJEXT)
mbground_test_OBJECTS = $(am_mbground_test_OBJECTS)
mbground_test_LDADD = $(LDADD)
mbground_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_mergemesh_test_OBJECTS = mergemesh_test.$(OBJEXT)
mergemesh_test_OBJECTS = $(am_mergemesh_test_OBJECTS)
mergemesh_test_LDADD = $(LDADD)
mergemesh_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_mesh_set_test_OBJECTS = Test_MBMeshSet.$(OBJEXT)
mesh_set_test_OBJECTS = $(am_mesh_set_test_OBJECTS)
mesh_set_test_LDADD = $(LDADD)
mesh_set_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_moab_test_OBJECTS = moab_test-MBTest.$(OBJEXT)
moab_test_OBJECTS = $(am_moab_test_OBJECTS)
moab_test_LDADD = $(LDADD)
am_obb_test_OBJECTS = OBBTest.$(OBJEXT)
obb_test_OBJECTS = $(am_obb_test_OBJECTS)
obb_test_LDADD = $(LDADD)
obb_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_range_test_OBJECTS = range_test.$(OBJEXT)
range_test_OBJECTS = $(am_range_test_OBJECTS)
range_test_LDADD = $(LDADD)
range_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_reorder_test_OBJECTS = reorder_test.$(OBJEXT)
reorder_test_OBJECTS = $(am_reorder_test_OBJECTS)
reorder_test_LDADD = $(LDADD)
reorder_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_scd_test_partn_OBJECTS = scd_test_partn.$(OBJEXT)
scd_test_partn_OBJECTS = $(am_scd_test_partn_OBJECTS)
scd_test_partn_LDADD = $(LDADD)
scd_test_partn_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_scdseq_test_OBJECTS = scdseq_test.$(OBJEXT)
scdseq_test_OBJECTS = $(am_scdseq_test_OBJECTS)
scdseq_test_LDADD = $(LDADD)
scdseq_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_seq_man_test_OBJECTS = TestTypeSequenceManager.$(OBJEXT)
seq_man_test_OBJECTS = $(am_seq_man_test_OBJECTS)
seq_man_test_LDADD = $(LDADD)
seq_man_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_spatial_locator_test_OBJECTS = spatial_locator_test.$(OBJEXT)
spatial_locator_test_OBJECTS = $(am_spatial_locator_test_OBJECTS)
spatial_locator_test_LDADD = $(LDADD)
spatial_locator_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_tag_test_OBJECTS = TagTest.$(OBJEXT)
tag_test_OBJECTS = $(am_tag_test_OBJECTS)
tag_test_LDADD = $(LDADD)
tag_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_test_adj_OBJECTS = test_adj.$(OBJEXT)
test_adj_OBJECTS = $(am_test_adj_OBJECTS)
test_adj_LDADD = $(LDADD)
test_adj_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_test_boundbox_OBJECTS = test_boundbox.$(OBJEXT)
test_boundbox_OBJECTS = $(am_test_boundbox_OBJECTS)
test_boundbox_LDADD = $(LDADD)
test_boundbox_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_test_prog_opt_OBJECTS = test_prog_opt-test_prog_opt.$(OBJEXT)
test_prog_opt_OBJECTS = $(am_test_prog_opt_OBJECTS)
test_prog_opt_LDADD = $(LDADD)
test_prog_opt_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_uref_mesh_test_OBJECTS = urefine_mesh_test.$(OBJEXT)
uref_mesh_test_OBJECTS = $(am_uref_mesh_test_OBJECTS)
uref_mesh_test_LDADD = $(LDADD)
uref_mesh_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_var_len_test_OBJECTS = VarLenTagTest.$(OBJEXT)
var_len_test_OBJECTS = $(am_var_len_test_OBJECTS)
var_len_test_LDADD = $(LDADD)
var_len_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am__objects_1 = var_len_test_no_template-VarLenTagTest.$(OBJEXT)
am_var_len_test_no_template_OBJECTS = $(am__objects_1)
var_len_test_no_template_OBJECTS =  \
	$(am_var_len_test_no_template_OBJECTS)
var_len_test_no_template_LDADD = $(LDADD)
var_len_test_no_template_DEPENDENCIES =  \
	$(top_builddir)/src/libMOAB.la
am_verdict_test_OBJECTS = verdict_test.$(OBJEXT)
verdict_test_OBJECTS = $(am_verdict_test_OBJECTS)
verdict_test_LDADD = $(LDADD)
verdict_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
am_xform_test_OBJECTS = affinexform_test.$(OBJEXT)
xform_test_OBJECTS = $(am_xform_test_OBJECTS)
xform_test_LDADD = $(LDADD)
xform_test_DEPENDENCIES = $(top_builddir)/src/libMOAB.la
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir) -I$(top_builddir)/src/moab -I$(top_builddir)/src/parallel -I$(top_builddir)/src
depcomp =
am__depfiles_maybe =
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(adaptive_kd_tree_tests_SOURCES) $(adj_moab_test_SOURCES) \
	$(bsp_tree_poly_test_SOURCES) $(bsp_tree_test_SOURCES) \
	$(coords_connect_iterate_SOURCES) $(cropvol_test_SOURCES) \
	$(elem_eval_test_SOURCES) $(file_options_test_SOURCES) \
	$(geom_util_test_SOURCES) $(gttool_test_SOURCES) \
	$(homxform_test_SOURCES) $(kd_tree_test_SOURCES) \
	$(kd_tree_time_SOURCES) $(kd_tree_tool_SOURCES) \
	$(lloyd_smoother_test_SOURCES) $(mbcn_test_SOURCES) \
	$(mbfacet_test_SOURCES) $(mbground_test_SOURCES) \
	$(mergemesh_test_SOURCES) $(mesh_set_test_SOURCES) \
	$(moab_test_SOURCES) $(obb_test_SOURCES) $(range_test_SOURCES) \
	$(reorder_test_SOURCES) $(scd_test_partn_SOURCES) \
	$(scdseq_test_SOURCES) $(seq_man_test_SOURCES) \
	$(spatial_locator_test_SOURCES) $(tag_test_SOURCES) \
	$(test_adj_SOURCES) $(test_boundbox_SOURCES) \
	$(test_prog_opt_SOURCES) $(uref_mesh_test_SOURCES) \
	$(var_len_test_SOURCES) $(var_len_test_no_template_SOURCES) \
	$(verdict_test_SOURCES) $(xform_test_SOURCES)
DIST_SOURCES = $(adaptive_kd_tree_tests_SOURCES) \
	$(adj_moab_test_SOURCES) $(bsp_tree_poly_test_SOURCES) \
	$(bsp_tree_test_SOURCES) $(coords_connect_iterate_SOURCES) \
	$(cropvol_test_SOURCES) $(elem_eval_test_SOURCES) \
	$(file_options_test_SOURCES) $(geom_util_test_SOURCES) \
	$(gttool_test_SOURCES) $(homxform_test_SOURCES) \
	$(kd_tree_test_SOURCES) $(kd_tree_time_SOURCES) \
	$(kd_tree_tool_SOURCES) $(lloyd_smoother_test_SOURCES) \
	$(mbcn_test_SOURCES) $(mbfacet_test_SOURCES) \
	$(mbground_test_SOURCES) $(mergemesh_test_SOURCES) \
	$(mesh_set_test_SOURCES) $(moab_test_SOURCES) \
	$(obb_test_SOURCES) $(range_test_SOURCES) \
	$(reorder_test_SOURCES) $(scd_test_partn_SOURCES) \
	$(scdseq_test_SOURCES) $(seq_man_test_SOURCES) \
	$(spatial_locator_test_SOURCES) $(tag_test_SOURCES) \
	$(test_adj_SOURCES) $(test_boundbox_SOURCES) \
	$(test_prog_opt_SOURCES) $(uref_mesh_test_SOURCES) \
	$(var_len_test_SOURCES) $(var_len_test_no_template_SOURCES) \
	$(verdict_test_SOURCES) $(xform_test_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DIST_SUBDIRS = . io dual obb perf h5file dagmc parallel oldinc
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_CFLAGS = @AM_CFLAGS@
AM_CPPFLAGS = @AM_CPPFLAGS@ -DIS_BUILDING_MB -DSRCDIR=$(srcdir) \
	-DMESHDIR=$(MESHDIR) -I$(top_builddir)/src -I$(top_srcdir)/src \
	-I$(top_srcdir)/src/LocalDiscretization \
	-I$(top_srcdir)/src/verdict -I$(top_srcdir)/src/RefineMesh \
	$(am__append_5)
AM_CXXFLAGS = @AM_CXXFLAGS@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AM_FCFLAGS = @AM_FCFLAGS@
AM_FFLAGS = @AM_FFLAGS@
AM_LDFLAGS = @AM_LDFLAGS@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CCMIO_LIBS = @CCMIO_LIBS@
CFLAGS = @CFLAGS@
CGM_CPPFLAGS = @CGM_CPPFLAGS@
CGM_DIR = @CGM_DIR@
CGM_LDFLAGS = @CGM_LDFLAGS@
CGM_LIBS = @CGM_LIBS@
CGM_LTFLAGS = @CGM_LTFLAGS@
CGNS_LIBS = @CGNS_LIBS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXX_LDFLAGS = @CXX_LDFLAGS@
CYGPATH_W = @CYGPATH_W@
DAGMC_LIBS = @DAGMC_LIBS@
DAMSEL_LIBS = @DAMSEL_LIBS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISTCHECK_CONFIGURE_FLAGS = @DISTCHECK_CONFIGURE_FLAGS@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_FORTRAN = @ENABLE_FORTRAN@
EXEEXT = @EXEEXT@
EXPORT_LDFLAGS = @EXPORT_LDFLAGS@
EXPORT_LTFLAGS = @EXPORT_LTFLAGS@
F77 = @F77@
FC = @FC@
FCFLAGS = @FCFLAGS@
FCLIBS = @FCLIBS@
FFLAGS = @FFLAGS@
FGREP = @FGREP@
FLIBS = @FLIBS@
GREP = @GREP@
HDF5_LIBS = @HDF5_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MOAB_CGM_DEFINES = @MOAB_CGM_DEFINES@
MOAB_CXX_LIBS = @MOAB_CXX_LIBS@
MOAB_CXX_LINKFLAGS = @MOAB_CXX_LINKFLAGS@
MOC = @MOC@
MPE_LIBS = @MPE_LIBS@
MPIEXEC = @MPIEXEC@
MPIEXEC_NP = @MPIEXEC_NP@
MPITYPE = @MPITYPE@
NC_CONFIG = @NC_CONFIG@
NETCDF_CPPFLAGS = @NETCDF_CPPFLAGS@
NETCDF_LDFLAGS = @NETCDF_LDFLAGS@
NETCDF_LIBS = @NETCDF_LIBS@
NETCDF_VERSION = @NETCDF_VERSION@
NM = @NM@
NMEDIT = @NMEDIT@
NP = @NP@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PNETCDF_LIBS = @PNETCDF_LIBS@
QTDIR = @QTDIR@
QVDUAL_INCLUDES = @QVDUAL_INCLUDES@
QVDUAL_LIBS = @QVDUAL_LIBS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SIZEOF_VOID_P = @SIZEOF_VOID_P@
STRIP = @STRIP@
UIC = @UIC@
USER_CONFIGURE_CMD = @USER_CONFIGURE_CMD@
VERSION = @VERSION@
VTK_INCLUDES = @VTK_INCLUDES@
VTK_INC_DIR = @VTK_INC_DIR@
VTK_LIBS = @VTK_LIBS@
VTK_LIB_DIR = @VTK_LIB_DIR@
WITH_MPE = @WITH_MPE@
XMKMF = @XMKMF@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
ZCAT = @ZCAT@
ZOLTAN_INC_FLAGS = @ZOLTAN_INC_FLAGS@
ZOLTAN_LIBS = @ZOLTAN_LIBS@
ZOLTAN_LIB_FLAGS = @ZOLTAN_LIB_FLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
examplesdir = @examplesdir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# Don't require GNU-standard files (Changelog, README, etc.)
AUTOMAKE_OPTIONS = foreign subdir-objects no-dependencies
SUBDIRS = . io dual obb perf $(am__append_1) $(am__append_2) \
	$(am__append_3) $(am__append_4)
LDADD = $(top_builddir)/src/libMOAB.la
MESHDIR = $(abs_top_srcdir)/MeshFiles/unittest
MOSTLYCLEANFILES = mb_write.g \
                   mb_write2.g \
                   hex_mid_volume_nodes.g \
                   hex_mid_edge_face_vol_nodes.g \
                   hex_mid_edge_nodes.g \
                   tet_mid_edge_nodes.g \
                   tet_mid_face_nodes.g \
                   tet_mid_edge_face_nodes.g \
                   tri_mid_edge_face_nodes.g \
                   mb_stress_out.g \
                   merge_test.g \
                   mm_out.h5m \
                   tree.h5m 


# Tests and such
verdict_test_SOURCES = verdict_test.cpp
range_test_SOURCES = range_test.cpp
moab_test_SOURCES = MBTest.cpp
moab_test_DEPENDENCIES = \
	mb_big_test.g \
	cell1.gen \
	cell2.gen \
	$(LDADD)

homxform_test_SOURCES = homxform_test.cpp
scdseq_test_SOURCES = scdseq_test.cpp
scd_test_partn_SOURCES = scd_test_partn.cpp
#scdseq_timing_SOURCES = scdseq_timing.cpp
#merge_test_SOURCES = merge_test.cpp
#test_exo_SOURCES = test_exo.cpp
#test_tag_server_SOURCES = $(top_srcdir)/src/TagServer.cpp
#test_tag_server_CPPFLAGS = -DTEST $(CPPFLAGS)
test_adj_SOURCES = test_adj.cpp
seq_man_test_SOURCES = TestUtil.hpp TestTypeSequenceManager.cpp 
mesh_set_test_SOURCES = Test_MBMeshSet.cpp TestUtil.hpp
geom_util_test_SOURCES = TestUtil.hpp GeomUtilTests.cpp 
xform_test_SOURCES = affinexform_test.cpp
obb_test_SOURCES = OBBTest.cpp
adaptive_kd_tree_tests_SOURCES = adaptive_kd_tree_tests.cpp
kd_tree_tool_SOURCES = kd_tree_tool.cpp
kd_tree_time_SOURCES = kd_tree_time.cpp
kd_tree_test_SOURCES = kd_tree_test.cpp
bsp_tree_test_SOURCES = bsp_tree_test.cpp
reorder_test_SOURCES = reorder_test.cpp
elem_eval_test_SOURCES = elem_eval_test.cpp
file_options_test_SOURCES = TestUtil.hpp fileopts_test.cpp
var_len_test_SOURCES = TestUtil.hpp VarLenTagTest.cpp
var_len_test_no_template_SOURCES = $(var_len_test_SOURCES)
var_len_test_no_template_CPPFLAGS = -UTEMPLATE_SPECIALIZATION $(AM_CPPFLAGS) $(CPPFLAGS)
tag_test_SOURCES = TestUtil.hpp TagTest.cpp
spatial_locator_test_SOURCES = TestUtil.hpp spatial_locator_test.cpp
mergemesh_test_SOURCES = mergemesh_test.cpp

#mbcn_test_SOURCES = $(top_srcdir)/src/moab/CN.hpp \
#                    $(top_srcdir)/src/CN.cpp \
#                    mbcn_test.cc
mbcn_test_SOURCES = mbcn_test.cc
bsp_tree_poly_test_SOURCES = bsp_tree_poly_test.cpp
mbfacet_test_SOURCES = mbfacet_test.cpp
mbground_test_SOURCES = mbground_test.cpp
gttool_test_SOURCES = gttool_test.cpp
cropvol_test_SOURCES = crop_vol_test.cpp
test_prog_opt_SOURCES = test_prog_opt.cpp
test_prog_opt_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS) $(am__append_9)
moab_test_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS) $(am__append_7)
kd_tree_test_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS) $(am__append_8)
coords_connect_iterate_SOURCES = coords_connect_iterate.cpp
coords_connect_iterate_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS)
test_boundbox_SOURCES = test_boundbox.cpp
lloyd_smoother_test_SOURCES = lloyd_smoother_test.cpp
adj_moab_test_SOURCES = adj_moab_test.cpp
uref_mesh_test_SOURCES = urefine_mesh_test.cpp
EXTRA_DIST = TestUtil.hpp TestRunner.hpp
CLEANFILES = mb_big_test.g \
             cell1.gen \
             cell2.gen

all: all-recursive

.SUFFIXES:
.SUFFIXES: .cc .cpp .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

adaptive_kd_tree_tests$(EXEEXT): $(adaptive_kd_tree_tests_OBJECTS) $(adaptive_kd_tree_tests_DEPENDENCIES) $(EXTRA_adaptive_kd_tree_tests_DEPENDENCIES) 
	@rm -f adaptive_kd_tree_tests$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(adaptive_kd_tree_tests_OBJECTS) $(adaptive_kd_tree_tests_LDADD) $(LIBS)

adj_moab_test$(EXEEXT): $(adj_moab_test_OBJECTS) $(adj_moab_test_DEPENDENCIES) $(EXTRA_adj_moab_test_DEPENDENCIES) 
	@rm -f adj_moab_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(adj_moab_test_OBJECTS) $(adj_moab_test_LDADD) $(LIBS)

bsp_tree_poly_test$(EXEEXT): $(bsp_tree_poly_test_OBJECTS) $(bsp_tree_poly_test_DEPENDENCIES) $(EXTRA_bsp_tree_poly_test_DEPENDENCIES) 
	@rm -f bsp_tree_poly_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bsp_tree_poly_test_OBJECTS) $(bsp_tree_poly_test_LDADD) $(LIBS)

bsp_tree_test$(EXEEXT): $(bsp_tree_test_OBJECTS) $(bsp_tree_test_DEPENDENCIES) $(EXTRA_bsp_tree_test_DEPENDENCIES) 
	@rm -f bsp_tree_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bsp_tree_test_OBJECTS) $(bsp_tree_test_LDADD) $(LIBS)

coords_connect_iterate$(EXEEXT): $(coords_connect_iterate_OBJECTS) $(coords_connect_iterate_DEPENDENCIES) $(EXTRA_coords_connect_iterate_DEPENDENCIES) 
	@rm -f coords_connect_iterate$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(coords_connect_iterate_OBJECTS) $(coords_connect_iterate_LDADD) $(LIBS)

cropvol_test$(EXEEXT): $(cropvol_test_OBJECTS) $(cropvol_test_DEPENDENCIES) $(EXTRA_cropvol_test_DEPENDENCIES) 
	@rm -f cropvol_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(cropvol_test_OBJECTS) $(cropvol_test_LDADD) $(LIBS)

elem_eval_test$(EXEEXT): $(elem_eval_test_OBJECTS) $(elem_eval_test_DEPENDENCIES) $(EXTRA_elem_eval_test_DEPENDENCIES) 
	@rm -f elem_eval_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(elem_eval_test_OBJECTS) $(elem_eval_test_LDADD) $(LIBS)

file_options_test$(EXEEXT): $(file_options_test_OBJECTS) $(file_options_test_DEPENDENCIES) $(EXTRA_file_options_test_DEPENDENCIES) 
	@rm -f file_options_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(file_options_test_OBJECTS) $(file_options_test_LDADD) $(LIBS)

geom_util_test$(EXEEXT): $(geom_util_test_OBJECTS) $(geom_util_test_DEPENDENCIES) $(EXTRA_geom_util_test_DEPENDENCIES) 
	@rm -f geom_util_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(geom_util_test_OBJECTS) $(geom_util_test_LDADD) $(LIBS)

gttool_test$(EXEEXT): $(gttool_test_OBJECTS) $(gttool_test_DEPENDENCIES) $(EXTRA_gttool_test_DEPENDENCIES) 
	@rm -f gttool_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(gttool_test_OBJECTS) $(gttool_test_LDADD) $(LIBS)

homxform_test$(EXEEXT): $(homxform_test_OBJECTS) $(homxform_test_DEPENDENCIES) $(EXTRA_homxform_test_DEPENDENCIES) 
	@rm -f homxform_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(homxform_test_OBJECTS) $(homxform_test_LDADD) $(LIBS)

kd_tree_test$(EXEEXT): $(kd_tree_test_OBJECTS) $(kd_tree_test_DEPENDENCIES) $(EXTRA_kd_tree_test_DEPENDENCIES) 
	@rm -f kd_tree_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(kd_tree_test_OBJECTS) $(kd_tree_test_LDADD) $(LIBS)

kd_tree_time$(EXEEXT): $(kd_tree_time_OBJECTS) $(kd_tree_time_DEPENDENCIES) $(EXTRA_kd_tree_time_DEPENDENCIES) 
	@rm -f kd_tree_time$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(kd_tree_time_OBJECTS) $(kd_tree_time_LDADD) $(LIBS)

kd_tree_tool$(EXEEXT): $(kd_tree_tool_OBJECTS) $(kd_tree_tool_DEPENDENCIES) $(EXTRA_kd_tree_tool_DEPENDENCIES) 
	@rm -f kd_tree_tool$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(kd_tree_tool_OBJECTS) $(kd_tree_tool_LDADD) $(LIBS)

lloyd_smoother_test$(EXEEXT): $(lloyd_smoother_test_OBJECTS) $(lloyd_smoother_test_DEPENDENCIES) $(EXTRA_lloyd_smoother_test_DEPENDENCIES) 
	@rm -f lloyd_smoother_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(lloyd_smoother_test_OBJECTS) $(lloyd_smoother_test_LDADD) $(LIBS)

mbcn_test$(EXEEXT): $(mbcn_test_OBJECTS) $(mbcn_test_DEPENDENCIES) $(EXTRA_mbcn_test_DEPENDENCIES) 
	@rm -f mbcn_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(mbcn_test_OBJECTS) $(mbcn_test_LDADD) $(LIBS)

mbfacet_test$(EXEEXT): $(mbfacet_test_OBJECTS) $(mbfacet_test_DEPENDENCIES) $(EXTRA_mbfacet_test_DEPENDENCIES) 
	@rm -f mbfacet_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(mbfacet_test_OBJECTS) $(mbfacet_test_LDADD) $(LIBS)

mbground_test$(EXEEXT): $(mbground_test_OBJECTS) $(mbground_test_DEPENDENCIES) $(EXTRA_mbground_test_DEPENDENCIES) 
	@rm -f mbground_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(mbground_test_OBJECTS) $(mbground_test_LDADD) $(LIBS)

mergemesh_test$(EXEEXT): $(mergemesh_test_OBJECTS) $(mergemesh_test_DEPENDENCIES) $(EXTRA_mergemesh_test_DEPENDENCIES) 
	@rm -f mergemesh_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(mergemesh_test_OBJECTS) $(mergemesh_test_LDADD) $(LIBS)

mesh_set_test$(EXEEXT): $(mesh_set_test_OBJECTS) $(mesh_set_test_DEPENDENCIES) $(EXTRA_mesh_set_test_DEPENDENCIES) 
	@rm -f mesh_set_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(mesh_set_test_OBJECTS) $(mesh_set_test_LDADD) $(LIBS)

moab_test$(EXEEXT): $(moab_test_OBJECTS) $(moab_test_DEPENDENCIES) $(EXTRA_moab_test_DEPENDENCIES) 
	@rm -f moab_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(moab_test_OBJECTS) $(moab_test_LDADD) $(LIBS)

obb_test$(EXEEXT): $(obb_test_OBJECTS) $(obb_test_DEPENDENCIES) $(EXTRA_obb_test_DEPENDENCIES) 
	@rm -f obb_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(obb_test_OBJECTS) $(obb_test_LDADD) $(LIBS)

range_test$(EXEEXT): $(range_test_OBJECTS) $(range_test_DEPENDENCIES) $(EXTRA_range_test_DEPENDENCIES) 
	@rm -f range_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(range_test_OBJECTS) $(range_test_LDADD) $(LIBS)

reorder_test$(EXEEXT): $(reorder_test_OBJECTS) $(reorder_test_DEPENDENCIES) $(EXTRA_reorder_test_DEPENDENCIES) 
	@rm -f reorder_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(reorder_test_OBJECTS) $(reorder_test_LDADD) $(LIBS)

scd_test_partn$(EXEEXT): $(scd_test_partn_OBJECTS) $(scd_test_partn_DEPENDENCIES) $(EXTRA_scd_test_partn_DEPENDENCIES) 
	@rm -f scd_test_partn$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(scd_test_partn_OBJECTS) $(scd_test_partn_LDADD) $(LIBS)

scdseq_test$(EXEEXT): $(scdseq_test_OBJECTS) $(scdseq_test_DEPENDENCIES) $(EXTRA_scdseq_test_DEPENDENCIES) 
	@rm -f scdseq_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(scdseq_test_OBJECTS) $(scdseq_test_LDADD) $(LIBS)

seq_man_test$(EXEEXT): $(seq_man_test_OBJECTS) $(seq_man_test_DEPENDENCIES) $(EXTRA_seq_man_test_DEPENDENCIES) 
	@rm -f seq_man_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(seq_man_test_OBJECTS) $(seq_man_test_LDADD) $(LIBS)

spatial_locator_test$(EXEEXT): $(spatial_locator_test_OBJECTS) $(spatial_locator_test_DEPENDENCIES) $(EXTRA_spatial_locator_test_DEPENDENCIES) 
	@rm -f spatial_locator_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(spatial_locator_test_OBJECTS) $(spatial_locator_test_LDADD) $(LIBS)

tag_test$(EXEEXT): $(tag_test_OBJECTS) $(tag_test_DEPENDENCIES) $(EXTRA_tag_test_DEPENDENCIES) 
	@rm -f tag_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(tag_test_OBJECTS) $(tag_test_LDADD) $(LIBS)

test_adj$(EXEEXT): $(test_adj_OBJECTS) $(test_adj_DEPENDENCIES) $(EXTRA_test_adj_DEPENDENCIES) 
	@rm -f test_adj$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_adj_OBJECTS) $(test_adj_LDADD) $(LIBS)

test_boundbox$(EXEEXT): $(test_boundbox_OBJECTS) $(test_boundbox_DEPENDENCIES) $(EXTRA_test_boundbox_DEPENDENCIES) 
	@rm -f test_boundbox$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_boundbox_OBJECTS) $(test_boundbox_LDADD) $(LIBS)

test_prog_opt$(EXEEXT): $(test_prog_opt_OBJECTS) $(test_prog_opt_DEPENDENCIES) $(EXTRA_test_prog_opt_DEPENDENCIES) 
	@rm -f test_prog_opt$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_prog_opt_OBJECTS) $(test_prog_opt_LDADD) $(LIBS)

uref_mesh_test$(EXEEXT): $(uref_mesh_test_OBJECTS) $(uref_mesh_test_DEPENDENCIES) $(EXTRA_uref_mesh_test_DEPENDENCIES) 
	@rm -f uref_mesh_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(uref_mesh_test_OBJECTS) $(uref_mesh_test_LDADD) $(LIBS)

var_len_test$(EXEEXT): $(var_len_test_OBJECTS) $(var_len_test_DEPENDENCIES) $(EXTRA_var_len_test_DEPENDENCIES) 
	@rm -f var_len_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(var_len_test_OBJECTS) $(var_len_test_LDADD) $(LIBS)

var_len_test_no_template$(EXEEXT): $(var_len_test_no_template_OBJECTS) $(var_len_test_no_template_DEPENDENCIES) $(EXTRA_var_len_test_no_template_DEPENDENCIES) 
	@rm -f var_len_test_no_template$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(var_len_test_no_template_OBJECTS) $(var_len_test_no_template_LDADD) $(LIBS)

verdict_test$(EXEEXT): $(verdict_test_OBJECTS) $(verdict_test_DEPENDENCIES) $(EXTRA_verdict_test_DEPENDENCIES) 
	@rm -f verdict_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(verdict_test_OBJECTS) $(verdict_test_LDADD) $(LIBS)

xform_test$(EXEEXT): $(xform_test_OBJECTS) $(xform_test_DEPENDENCIES) $(EXTRA_xform_test_DEPENDENCIES) 
	@rm -f xform_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(xform_test_OBJECTS) $(xform_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

coords_connect_iterate-coords_connect_iterate.o: coords_connect_iterate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coords_connect_iterate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coords_connect_iterate-coords_connect_iterate.o `test -f 'coords_connect_iterate.cpp' || echo '$(srcdir)/'`coords_connect_iterate.cpp

coords_connect_iterate-coords_connect_iterate.obj: coords_connect_iterate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(coords_connect_iterate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o coords_connect_iterate-coords_connect_iterate.obj `if test -f 'coords_connect_iterate.cpp'; then $(CYGPATH_W) 'coords_connect_iterate.cpp'; else $(CYGPATH_W) '$(srcdir)/coords_connect_iterate.cpp'; fi`

kd_tree_test-kd_tree_test.o: kd_tree_test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kd_tree_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kd_tree_test-kd_tree_test.o `test -f 'kd_tree_test.cpp' || echo '$(srcdir)/'`kd_tree_test.cpp

kd_tree_test-kd_tree_test.obj: kd_tree_test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kd_tree_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kd_tree_test-kd_tree_test.obj `if test -f 'kd_tree_test.cpp'; then $(CYGPATH_W) 'kd_tree_test.cpp'; else $(CYGPATH_W) '$(srcdir)/kd_tree_test.cpp'; fi`

moab_test-MBTest.o: MBTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(moab_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o moab_test-MBTest.o `test -f 'MBTest.cpp' || echo '$(srcdir)/'`MBTest.cpp

moab_test-MBTest.obj: MBTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(moab_test_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o moab_test-MBTest.obj `if test -f 'MBTest.cpp'; then $(CYGPATH_W) 'MBTest.cpp'; else $(CYGPATH_W) '$(srcdir)/MBTest.cpp'; fi`

test_prog_opt-test_prog_opt.o: test_prog_opt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_prog_opt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_prog_opt-test_prog_opt.o `test -f 'test_prog_opt.cpp' || echo '$(srcdir)/'`test_prog_opt.cpp

test_prog_opt-test_prog_opt.obj: test_prog_opt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_prog_opt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_prog_opt-test_prog_opt.obj `if test -f 'test_prog_opt.cpp'; then $(CYGPATH_W) 'test_prog_opt.cpp'; else $(CYGPATH_W) '$(srcdir)/test_prog_opt.cpp'; fi`

var_len_test_no_template-VarLenTagTest.o: VarLenTagTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(var_len_test_no_template_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o var_len_test_no_template-VarLenTagTest.o `test -f 'VarLenTagTest.cpp' || echo '$(srcdir)/'`VarLenTagTest.cpp

var_len_test_no_template-VarLenTagTest.obj: VarLenTagTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(var_len_test_no_template_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o var_len_test_no_template-VarLenTagTest.obj `if test -f 'VarLenTagTest.cpp'; then $(CYGPATH_W) 'VarLenTagTest.cpp'; else $(CYGPATH_W) '$(srcdir)/VarLenTagTest.cpp'; fi`

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
range_test.log: range_test$(EXEEXT)
	@p='range_test$(EXEEXT)'; \
	b='range_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
moab_test.log: moab_test$(EXEEXT)
	@p='moab_test$(EXEEXT)'; \
	b='moab_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
homxform_test.log: homxform_test$(EXEEXT)
	@p='homxform_test$(EXEEXT)'; \
	b='homxform_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
scdseq_test.log: scdseq_test$(EXEEXT)
	@p='scdseq_test$(EXEEXT)'; \
	b='scdseq_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
scd_test_partn.log: scd_test_partn$(EXEEXT)
	@p='scd_test_partn$(EXEEXT)'; \
	b='scd_test_partn'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_adj.log: test_adj$(EXEEXT)
	@p='test_adj$(EXEEXT)'; \
	b='test_adj'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
seq_man_test.log: seq_man_test$(EXEEXT)
	@p='seq_man_test$(EXEEXT)'; \
	b='seq_man_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
geom_util_test.log: geom_util_test$(EXEEXT)
	@p='geom_util_test$(EXEEXT)'; \
	b='geom_util_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
xform_test.log: xform_test$(EXEEXT)
	@p='xform_test$(EXEEXT)'; \
	b='xform_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
obb_test.log: obb_test$(EXEEXT)
	@p='obb_test$(EXEEXT)'; \
	b='obb_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
adaptive_kd_tree_tests.log: adaptive_kd_tree_tests$(EXEEXT)
	@p='adaptive_kd_tree_tests$(EXEEXT)'; \
	b='adaptive_kd_tree_tests'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
bsp_tree_test.log: bsp_tree_test$(EXEEXT)
	@p='bsp_tree_test$(EXEEXT)'; \
	b='bsp_tree_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
file_options_test.log: file_options_test$(EXEEXT)
	@p='file_options_test$(EXEEXT)'; \
	b='file_options_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
kd_tree_test.log: kd_tree_test$(EXEEXT)
	@p='kd_tree_test$(EXEEXT)'; \
	b='kd_tree_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
var_len_test.log: var_len_test$(EXEEXT)
	@p='var_len_test$(EXEEXT)'; \
	b='var_len_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
var_len_test_no_template.log: var_len_test_no_template$(EXEEXT)
	@p='var_len_test_no_template$(EXEEXT)'; \
	b='var_len_test_no_template'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tag_test.log: tag_test$(EXEEXT)
	@p='tag_test$(EXEEXT)'; \
	b='tag_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mesh_set_test.log: mesh_set_test$(EXEEXT)
	@p='mesh_set_test$(EXEEXT)'; \
	b='mesh_set_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mbcn_test.log: mbcn_test$(EXEEXT)
	@p='mbcn_test$(EXEEXT)'; \
	b='mbcn_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
bsp_tree_poly_test.log: bsp_tree_poly_test$(EXEEXT)
	@p='bsp_tree_poly_test$(EXEEXT)'; \
	b='bsp_tree_poly_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
reorder_test.log: reorder_test$(EXEEXT)
	@p='reorder_test$(EXEEXT)'; \
	b='reorder_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_prog_opt.log: test_prog_opt$(EXEEXT)
	@p='test_prog_opt$(EXEEXT)'; \
	b='test_prog_opt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
coords_connect_iterate.log: coords_connect_iterate$(EXEEXT)
	@p='coords_connect_iterate$(EXEEXT)'; \
	b='coords_connect_iterate'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
elem_eval_test.log: elem_eval_test$(EXEEXT)
	@p='elem_eval_test$(EXEEXT)'; \
	b='elem_eval_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
spatial_locator_test.log: spatial_locator_test$(EXEEXT)
	@p='spatial_locator_test$(EXEEXT)'; \
	b='spatial_locator_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_boundbox.log: test_boundbox$(EXEEXT)
	@p='test_boundbox$(EXEEXT)'; \
	b='test_boundbox'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
adj_moab_test.log: adj_moab_test$(EXEEXT)
	@p='adj_moab_test$(EXEEXT)'; \
	b='adj_moab_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
uref_mesh_test.log: uref_mesh_test$(EXEEXT)
	@p='uref_mesh_test$(EXEEXT)'; \
	b='uref_mesh_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
verdict_test.log: verdict_test$(EXEEXT)
	@p='verdict_test$(EXEEXT)'; \
	b='verdict_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mbfacet_test.log: mbfacet_test$(EXEEXT)
	@p='mbfacet_test$(EXEEXT)'; \
	b='mbfacet_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gttool_test.log: gttool_test$(EXEEXT)
	@p='gttool_test$(EXEEXT)'; \
	b='gttool_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cropvol_test.log: cropvol_test$(EXEEXT)
	@p='cropvol_test$(EXEEXT)'; \
	b='cropvol_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mergemesh_test.log: mergemesh_test$(EXEEXT)
	@p='mergemesh_test$(EXEEXT)'; \
	b='mergemesh_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mbground_test.log: mbground_test$(EXEEXT)
	@p='mbground_test$(EXEEXT)'; \
	b='mbground_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lloyd_smoother_test.log: lloyd_smoother_test$(EXEEXT)
	@p='lloyd_smoother_test$(EXEEXT)'; \
	b='lloyd_smoother_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-TESTS check-am clean clean-checkPROGRAMS clean-generic \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am


mb_big_test.g: $(MESHDIR)/mb_big_test.g.gz
	$(AM_V_GEN)$(ZCAT) $< > $@

cell1.gen: $(MESHDIR)/cell1.gen.gz
	$(AM_V_GEN)$(ZCAT) $< > $@

cell2.gen: $(MESHDIR)/cell2.gen.gz
	$(AM_V_GEN)$(ZCAT) $< > $@

# Utility target: build but don't run tests
build-check:
	$(MAKE) 'TESTS_ENVIRONMENT=: ' check

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
